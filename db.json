{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/anatole/source/css/blog_basic.css","path":"css/blog_basic.css","modified":1,"renderable":1},{"_id":"themes/anatole/source/css/font-awesome.min.css","path":"css/font-awesome.min.css","modified":1,"renderable":1},{"_id":"themes/anatole/source/css/style.css","path":"css/style.css","modified":1,"renderable":1},{"_id":"themes/anatole/source/css/style.scss","path":"css/style.scss","modified":1,"renderable":1},{"_id":"themes/anatole/source/fonts/fontawesome-webfont.eot","path":"fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/anatole/source/fonts/fontawesome-webfont.woff","path":"fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/anatole/source/images/favicon.png","path":"images/favicon.png","modified":1,"renderable":1},{"_id":"themes/anatole/source/js/jquery-migrate-1.2.1.min.js","path":"js/jquery-migrate-1.2.1.min.js","modified":1,"renderable":1},{"_id":"themes/anatole/source/images/logo.png","path":"images/logo.png","modified":1,"renderable":1},{"_id":"themes/anatole/source/js/jquery.appear.js","path":"js/jquery.appear.js","modified":1,"renderable":1},{"_id":"themes/anatole/source/images/logo@2x.png","path":"images/logo@2x.png","modified":1,"renderable":1},{"_id":"themes/anatole/source/fonts/fontawesome-webfont.ttf","path":"fonts/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/anatole/source/fonts/fontawesome-webfont.svg","path":"fonts/fontawesome-webfont.svg","modified":1,"renderable":1},{"_id":"themes/anatole/source/js/jquery.js","path":"js/jquery.js","modified":1,"renderable":1}],"Cache":[{"_id":"source/_posts/HexoCommand.md","hash":"b0da84cd51801ae06af56bce8ffc7428a75001e3","modified":1496822129000},{"_id":"source/_posts/dotNetCoreIdentityResearch.md","hash":"420358c23a612bce790a5f38292342b141d2e454","modified":1496821776000},{"_id":"public/2017/05/23/HexoCommand/index.html","hash":"2f0fc81f389e3c7d624b3ffd2019bf23efe1a878","modified":1496822537729},{"_id":"public/2017/06/07/dotNetCoreIdentityResearch/index.html","hash":"782410d8cb18f699a88a85cd90512b20491c62c7","modified":1496822537730},{"_id":"public/categories/Net-Core/index.html","hash":"3279f8533929c06398662fe6dec53ca9c2275cfc","modified":1496822537730},{"_id":"public/archives/index.html","hash":"2f19b4747cda1753b9638bffe61514ddf441f374","modified":1496822537730},{"_id":"public/index.html","hash":"2331e78315ef517f5f2207f5b180a8ac29db600b","modified":1496822537730},{"_id":"public/tags/hexo/index.html","hash":"2810304c5460d8d1493eca80f5e2b08e5b3f15ee","modified":1496822537730},{"_id":"public/tags/Net-Core/index.html","hash":"87012d73da361a804697fb934fb86dc1e8e4cf99","modified":1496822537730},{"_id":"public/tags/Identity/index.html","hash":"511e6d203b4b829fd791ad166af4a87200d6f9c7","modified":1496822537730},{"_id":"public/tags/Authentication/index.html","hash":"db61038d970947de7e877028e7b2dc5ffcd9fd4b","modified":1496822537730},{"_id":"themes/anatole/LICENSE","hash":"359cb81298c1fdbccf531548fc097466b0151be4","modified":1496822497000},{"_id":"themes/anatole/.gitignore","hash":"9fcbb05b158b5d3ba1ee60d38889e05e8b0f3f2a","modified":1496822497000},{"_id":"themes/anatole/_config.sample.yml","hash":"6be956c94e534806c130e09fe2379d3dcb1d8142","modified":1496822497000},{"_id":"themes/anatole/README.md","hash":"75a3829b8a316249ec0b4fd8eae2d371de879494","modified":1496822497000},{"_id":"themes/anatole/package.json","hash":"cf731a3ebf3913747fccb6c4c6615eba7d7e88a4","modified":1496822497000},{"_id":"themes/anatole/.git/FETCH_HEAD","hash":"fd98c4405f321d0f612694fb07f52ce64a5c41a0","modified":1496822524000},{"_id":"themes/anatole/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1496822497000},{"_id":"themes/anatole/.git/ORIG_HEAD","hash":"efcfd1e05d5dccb0f1fafe0f4370d4c592ea83a6","modified":1496822524000},{"_id":"themes/anatole/.git/config","hash":"831e9fdc6bb9fa56130a1292e248c5ad420f7229","modified":1496822497000},{"_id":"themes/anatole/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1496822491000},{"_id":"themes/anatole/.git/index","hash":"b206341b06b89101587b0b548c6ebe34dc5ed36f","modified":1496822497000},{"_id":"themes/anatole/.git/packed-refs","hash":"c804cd49127532a2f3827fb8e45d0cdda975dec1","modified":1496822497000},{"_id":"themes/anatole/languages/zh-cn.yml","hash":"dab1823e036f4adb3b7ae9efe95a37a15e47bec2","modified":1496822497000},{"_id":"themes/anatole/layout/archive.jade","hash":"1a161404966000b25a84762f08da3ca60af146bc","modified":1496822497000},{"_id":"themes/anatole/layout/mixins.jade","hash":"107bfd2fe10de0d8b110c13bb1168af79e62a37c","modified":1496822497000},{"_id":"themes/anatole/layout/category.jade","hash":"ae894ef4baee4a0c7c8e66641166061e789f1fa7","modified":1496822497000},{"_id":"themes/anatole/layout/index.jade","hash":"53da3cfd498951148acb33de1574df80ae282dc5","modified":1496822497000},{"_id":"themes/anatole/layout/post.jade","hash":"2f2b91b98d8f72d105211cdbf312d44ea3b1b145","modified":1496822497000},{"_id":"themes/anatole/layout/page.jade","hash":"15142c94e5c2247aba8efb64cffd695b3f133670","modified":1496822497000},{"_id":"themes/anatole/layout/tag.jade","hash":"7017a8bae4f4a412dafb556772bdcf2cfddeb79f","modified":1496822497000},{"_id":"themes/anatole/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1496822491000},{"_id":"themes/anatole/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1496822491000},{"_id":"themes/anatole/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1496822491000},{"_id":"themes/anatole/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1496822491000},{"_id":"themes/anatole/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1496822491000},{"_id":"themes/anatole/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1496822491000},{"_id":"themes/anatole/.git/hooks/pre-rebase.sample","hash":"5885a56ab4fca8075a05a562d005e922cde9853b","modified":1496822491000},{"_id":"themes/anatole/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1496822491000},{"_id":"themes/anatole/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1496822491000},{"_id":"themes/anatole/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1496822491000},{"_id":"themes/anatole/.git/logs/HEAD","hash":"c1204ed1585649b33fd61ad9e7eb5ec093bede24","modified":1496822497000},{"_id":"themes/anatole/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1496822491000},{"_id":"themes/anatole/layout/partial/comments.jade","hash":"6d749e695e30ecfc0a2de2b443fd361f5f2a5cff","modified":1496822497000},{"_id":"themes/anatole/layout/partial/footer.jade","hash":"772f03a2dd9fa4fed422c4eb4d5d1ace84c65580","modified":1496822497000},{"_id":"themes/anatole/layout/partial/layout.jade","hash":"174050fa9ee919f5bcb2c5426224ec1968db672c","modified":1496822497000},{"_id":"themes/anatole/layout/partial/head.jade","hash":"3d6126d0b53a889a46ad61eb8cc0ab1b35446c49","modified":1496822497000},{"_id":"themes/anatole/layout/partial/nav.jade","hash":"6ef30551de7b22d99b6a0980caf7899d7c303093","modified":1496822497000},{"_id":"themes/anatole/layout/partial/sidebar.jade","hash":"6721b1e0b1e59e54d031a4978e7f82aece336efc","modified":1496822497000},{"_id":"themes/anatole/source/css/blog_basic.css","hash":"7db88f0873e858b21a4c981c8481708ad9117478","modified":1496822497000},{"_id":"themes/anatole/source/css/font-awesome.min.css","hash":"95d0b0c4d11105c81be1857b744076a1d2bed918","modified":1496822497000},{"_id":"themes/anatole/source/css/style.css","hash":"871a5c940cbc0ce5488a670f2285f2c3015cf71c","modified":1496822497000},{"_id":"themes/anatole/source/css/style.scss","hash":"175c9237798207f705c62777b5f51509adec6d0a","modified":1496822497000},{"_id":"themes/anatole/source/fonts/fontawesome-webfont.eot","hash":"0183979056f0b87616cd99d5c54a48f3b771eee6","modified":1496822497000},{"_id":"themes/anatole/source/fonts/fontawesome-webfont.woff","hash":"7d65e0227d0d7cdc1718119cd2a7dce0638f151c","modified":1496822497000},{"_id":"themes/anatole/source/images/favicon.png","hash":"d659236704308954da9d64b101c4f54cc3f3255c","modified":1496822497000},{"_id":"themes/anatole/source/js/jquery-migrate-1.2.1.min.js","hash":"743052320809514fb788fe1d3df37fc87ce90452","modified":1496822497000},{"_id":"themes/anatole/source/images/logo.png","hash":"41bdf2ebd8cc193ad82a211758af827d891b1a90","modified":1496822497000},{"_id":"themes/anatole/source/js/jquery.appear.js","hash":"1f8067d7bd4c0bde30785e8016100f239e14394f","modified":1496822497000},{"_id":"themes/anatole/source/images/logo@2x.png","hash":"49c3fa97724abf53861bf11356ea9ba5bcb11576","modified":1496822497000},{"_id":"themes/anatole/source/fonts/fontawesome-webfont.ttf","hash":"6225ccc4ec94d060f19efab97ca42d842845b949","modified":1496822497000},{"_id":"themes/anatole/.git/objects/pack/pack-81a27a7d6fc491bd59d681b5172a319bdc30711d.idx","hash":"4bcf9c0602dbbe42e1e25125d896a8cb677087bd","modified":1496822497000},{"_id":"themes/anatole/.git/refs/heads/master","hash":"efcfd1e05d5dccb0f1fafe0f4370d4c592ea83a6","modified":1496822497000},{"_id":"themes/anatole/.git/logs/refs/heads/master","hash":"c1204ed1585649b33fd61ad9e7eb5ec093bede24","modified":1496822497000},{"_id":"themes/anatole/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1496822497000},{"_id":"themes/anatole/source/fonts/fontawesome-webfont.svg","hash":"cd980eab6db5fa57db670cb2e4278e67e1a4d6c9","modified":1496822497000},{"_id":"themes/anatole/source/js/jquery.js","hash":"bfc05b695dfa4f23e11d04b84993585da7a764bf","modified":1496822497000},{"_id":"themes/anatole/.git/logs/refs/remotes/origin/HEAD","hash":"c1204ed1585649b33fd61ad9e7eb5ec093bede24","modified":1496822497000},{"_id":"themes/anatole/.git/objects/pack/pack-81a27a7d6fc491bd59d681b5172a319bdc30711d.pack","hash":"7b6483c3870a27227136881511b59dcfa078091f","modified":1496822497000},{"_id":"public/fonts/fontawesome-webfont.woff","hash":"7d65e0227d0d7cdc1718119cd2a7dce0638f151c","modified":1496822537733},{"_id":"public/images/favicon.png","hash":"d659236704308954da9d64b101c4f54cc3f3255c","modified":1496822537734},{"_id":"public/images/logo.png","hash":"41bdf2ebd8cc193ad82a211758af827d891b1a90","modified":1496822537734},{"_id":"public/images/logo@2x.png","hash":"49c3fa97724abf53861bf11356ea9ba5bcb11576","modified":1496822537734},{"_id":"public/fonts/fontawesome-webfont.eot","hash":"0183979056f0b87616cd99d5c54a48f3b771eee6","modified":1496822537734},{"_id":"public/css/style.scss","hash":"175c9237798207f705c62777b5f51509adec6d0a","modified":1496822537734},{"_id":"public/css/style.css","hash":"871a5c940cbc0ce5488a670f2285f2c3015cf71c","modified":1496822537734},{"_id":"public/fonts/fontawesome-webfont.ttf","hash":"6225ccc4ec94d060f19efab97ca42d842845b949","modified":1496822537737},{"_id":"public/css/blog_basic.css","hash":"7db88f0873e858b21a4c981c8481708ad9117478","modified":1496822537742},{"_id":"public/js/jquery-migrate-1.2.1.min.js","hash":"743052320809514fb788fe1d3df37fc87ce90452","modified":1496822537742},{"_id":"public/js/jquery.appear.js","hash":"1f8067d7bd4c0bde30785e8016100f239e14394f","modified":1496822537742},{"_id":"public/css/font-awesome.min.css","hash":"95d0b0c4d11105c81be1857b744076a1d2bed918","modified":1496822537742},{"_id":"public/js/jquery.js","hash":"bfc05b695dfa4f23e11d04b84993585da7a764bf","modified":1496822537743},{"_id":"public/fonts/fontawesome-webfont.svg","hash":"cd980eab6db5fa57db670cb2e4278e67e1a4d6c9","modified":1496822537754}],"Category":[{"name":".Net Core","_id":"cj3mp828l00047xzcfqa24vt3"}],"Data":[],"Page":[],"Post":[{"title":"Hexo 常用指令","date":"2017-05-23T04:17:32.000Z","_content":"\n參考來源:\n[Hexo command](https://hexo.io/zh-tw/docs/commands.html)\n\n## 網站\n\n### 發佈或佈署網站\n```cli\nhexo deploy\nhexo deploy --generate\n```\n-g, --generate\t部署網站前先產生靜態檔案\n\n\n### 產生靜態檔案\n```cli\nhexo generate\n```\n\n### 本機運行\n```cli\nhexo server\n```\n-p, --port\t覆蓋連接埠設定\n-s, --static\t只使用靜態檔案\n-l, --log\t啟動記錄器，或覆蓋記錄格式\n\n## 文章\n參考來源:\n[Hexo Writing](https://hexo.io/zh-tw/docs/writing.html)\n\n### 新文章\n```cli\nhexo new [layout] <title>\n```\n`[layout]`: post(source/_posts), page(source), draft(source/_drafts)\n\n### \b完成草稿後，移動草稿到公開資料夾\n```\nhexo publish [layout] <title>\n```","source":"_posts/HexoCommand.md","raw":"---\ntitle: Hexo 常用指令\ntags: hexo\ndate: 2017-05-23 12:17:32\n---\n\n參考來源:\n[Hexo command](https://hexo.io/zh-tw/docs/commands.html)\n\n## 網站\n\n### 發佈或佈署網站\n```cli\nhexo deploy\nhexo deploy --generate\n```\n-g, --generate\t部署網站前先產生靜態檔案\n\n\n### 產生靜態檔案\n```cli\nhexo generate\n```\n\n### 本機運行\n```cli\nhexo server\n```\n-p, --port\t覆蓋連接埠設定\n-s, --static\t只使用靜態檔案\n-l, --log\t啟動記錄器，或覆蓋記錄格式\n\n## 文章\n參考來源:\n[Hexo Writing](https://hexo.io/zh-tw/docs/writing.html)\n\n### 新文章\n```cli\nhexo new [layout] <title>\n```\n`[layout]`: post(source/_posts), page(source), draft(source/_drafts)\n\n### \b完成草稿後，移動草稿到公開資料夾\n```\nhexo publish [layout] <title>\n```","slug":"HexoCommand","published":1,"updated":"2017-06-07T07:55:29.000Z","_id":"cj3mp827u00007xzcbqvf9z53","comments":1,"layout":"post","photos":[],"link":"","content":"<p>參考來源:<br><a href=\"https://hexo.io/zh-tw/docs/commands.html\" target=\"_blank\" rel=\"external\">Hexo command</a></p>\n<h2 id=\"網站\"><a href=\"#網站\" class=\"headerlink\" title=\"網站\"></a>網站</h2><h3 id=\"發佈或佈署網站\"><a href=\"#發佈或佈署網站\" class=\"headerlink\" title=\"發佈或佈署網站\"></a>發佈或佈署網站</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo deploy</div><div class=\"line\">hexo deploy --generate</div></pre></td></tr></table></figure>\n<p>-g, –generate    部署網站前先產生靜態檔案</p>\n<h3 id=\"產生靜態檔案\"><a href=\"#產生靜態檔案\" class=\"headerlink\" title=\"產生靜態檔案\"></a>產生靜態檔案</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo generate</div></pre></td></tr></table></figure>\n<h3 id=\"本機運行\"><a href=\"#本機運行\" class=\"headerlink\" title=\"本機運行\"></a>本機運行</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo server</div></pre></td></tr></table></figure>\n<p>-p, –port    覆蓋連接埠設定<br>-s, –static    只使用靜態檔案<br>-l, –log    啟動記錄器，或覆蓋記錄格式</p>\n<h2 id=\"文章\"><a href=\"#文章\" class=\"headerlink\" title=\"文章\"></a>文章</h2><p>參考來源:<br><a href=\"https://hexo.io/zh-tw/docs/writing.html\" target=\"_blank\" rel=\"external\">Hexo Writing</a></p>\n<h3 id=\"新文章\"><a href=\"#新文章\" class=\"headerlink\" title=\"新文章\"></a>新文章</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo new [layout] &lt;title&gt;</div></pre></td></tr></table></figure>\n<p><code>[layout]</code>: post(source/_posts), page(source), draft(source/_drafts)</p>\n<h3 id=\"完成草稿後，移動草稿到公開資料夾\"><a href=\"#完成草稿後，移動草稿到公開資料夾\" class=\"headerlink\" title=\"\b完成草稿後，移動草稿到公開資料夾\"></a>\b完成草稿後，移動草稿到公開資料夾</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo publish [layout] &lt;title&gt;</div></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<p>參考來源:<br><a href=\"https://hexo.io/zh-tw/docs/commands.html\">Hexo command</a></p>\n<h2 id=\"網站\"><a href=\"#網站\" class=\"headerlink\" title=\"網站\"></a>網站</h2><h3 id=\"發佈或佈署網站\"><a href=\"#發佈或佈署網站\" class=\"headerlink\" title=\"發佈或佈署網站\"></a>發佈或佈署網站</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo deploy</div><div class=\"line\">hexo deploy --generate</div></pre></td></tr></table></figure>\n<p>-g, –generate    部署網站前先產生靜態檔案</p>\n<h3 id=\"產生靜態檔案\"><a href=\"#產生靜態檔案\" class=\"headerlink\" title=\"產生靜態檔案\"></a>產生靜態檔案</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo generate</div></pre></td></tr></table></figure>\n<h3 id=\"本機運行\"><a href=\"#本機運行\" class=\"headerlink\" title=\"本機運行\"></a>本機運行</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo server</div></pre></td></tr></table></figure>\n<p>-p, –port    覆蓋連接埠設定<br>-s, –static    只使用靜態檔案<br>-l, –log    啟動記錄器，或覆蓋記錄格式</p>\n<h2 id=\"文章\"><a href=\"#文章\" class=\"headerlink\" title=\"文章\"></a>文章</h2><p>參考來源:<br><a href=\"https://hexo.io/zh-tw/docs/writing.html\">Hexo Writing</a></p>\n<h3 id=\"新文章\"><a href=\"#新文章\" class=\"headerlink\" title=\"新文章\"></a>新文章</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo new [layout] &lt;title&gt;</div></pre></td></tr></table></figure>\n<p><code>[layout]</code>: post(source/_posts), page(source), draft(source/_drafts)</p>\n<h3 id=\"完成草稿後，移動草稿到公開資料夾\"><a href=\"#完成草稿後，移動草稿到公開資料夾\" class=\"headerlink\" title=\"\b完成草稿後，移動草稿到公開資料夾\"></a>\b完成草稿後，移動草稿到公開資料夾</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo publish [layout] &lt;title&gt;</div></pre></td></tr></table></figure>"},{"title":"ASP.NET Core Identity、Authentication資源搜集","date":"2017-06-07T07:47:05.000Z","_content":"\n\n# ASP.NET Core 的 Identity與Authentication 資源搜集\n\n最近團隊計畫要從 ASP.NET 4.5 轉移到 ASP.NET Core，預先研究身份驗證與授權的相關文章，把讀過的資源整理起來方便之後查找。\n\n## 官方文件 ([連結](https://docs.microsoft.com/en-us/aspnet/core/security))\n在官方文件的 Security 章節裡([連結](https://docs.microsoft.com/en-us/aspnet/core/security/authentication/))，有提到關於Authentication(驗證)與Authorization(授權)的作法，其中關於Authentication的作法大約分成下列幾種方式:\n1. OSS Authentication Providers (OSS驗證)\n1. 使用 AspNetCore Identity EntityFrameworkCore\n1. 啟動 Facebook, Google 或其他驗證機制\n1. 透過簡訊的兩步驟驗證\n1. 使用Cookie Middleware而不使用ASP.NET Core Identity ([連結](https://docs.microsoft.com/en-us/aspnet/core/security/authentication/cookie))\n1. 使用Azure Active Directory (Azure AD)\n1. 使用 IdentityServer4\n\n基於上述的「5」，大約需要在 `Startup.cs` 的 `Configure` 方法中 `app.UseMVC()` 前加入下述程式:\n```c#\nusing Microsoft.AspNetCore.Authentication.Cookies;\n\nnamespace WebApplicationBasic\n{\n    public class Startup\n    {\n      public void Configure(IApplicationBuilder app, IHostingEnvironment env, ILoggerFactory loggerFactory)\n      {\n\n        app.UseCookieAuthentication(new CookieAuthenticationOptions()\n            {\n              AuthenticationScheme = \"CoreMVCCookieMiddlewareInstance\",\n              // AuthenticationScheme - this is a value by which the middleware is known. This is useful when there are multiple instances of middleware and you want to limit authorization to one instance.\n\n              LoginPath = new PathString(\"/Account/Unauthorized/\"),\n              // 當使用者未驗證時會重新轉導的路徑\n\n              AccessDeniedPath = new PathString(\"/Account/Forbidden/\"),\n              // 當使用者沒有使用權限時的轉導路徑\n\n              AutomaticAuthenticate = true,\n              // 在每次的 Requet(請求)前運行，嚐試驗證與重畫任何序列化主體\n\n              AutomaticChallenge = true\n              // 當授權失效時，Middleware會重新轉導到LoginPath或AccessDeniedPath\n            });\n\n        app.UseMVC();\n      }\n    }\n}\n\n```\n\n使用者登入時，呼叫SignInAsync 並傳入設定好的 `ClaimsPrincipal` Object\n```c#\nawait HttpContext.Authentication.SignInAsync(\"MyCookieMiddlewareInstance\", principal);\n```\n使用者登出時，呼叫SignOutAsync\n```c#\nawait HttpContext.Authentication.SignOutAsync(\"MyCookieMiddlewareInstance\");\n```\n\n\n官方文件讀到這裡，我\b對 `ClaimsPrincipal` 與 `ClaimsIdentity` 產生疑問，所以順著找又找到下列的說明與文章。\n\n## ClaimsIdentity 與 ClaimsPrincipal\n簡單來說 ClaimsIdentity 指的是驗證的方法，例如: 帳號密碼、手機簡訊或Windows驗證等。\nClaimsPrincipal 則是指驗證的主體，也就是請求驗證的使用者。\n在 ClaimsPrincipal 中有一個屬性為`IEnumerable<ClaimsIdentity> Identities`，這表示一個使用者可以有多種的驗證方式(驗證的方法)，來向 Server 證明自己是當事人。\n\n## 非官方文件\n下面列出在閱讀官方文件後，找到的補充資料。\n\n### 英文\n1. 解釋 ClaimsPrincipal 與 ClaimsIdentity間的關聯 by Andrew Lock ([連結](https://andrewlock.net/introduction-to-authentication-with-asp-net-core/))\n1. Exploring the cookie authentication middleware in ASP.NET Core. by Andrew Lock ([連結](https://andrewlock.net/exploring-the-cookieauthenticationmiddleware-in-asp-net-core/))\n\n\n### 中文\n這裡列出四篇「杨晓东」的文章，用比較簡單的例子來說明Identity。\n作者的網站裡還有很多ASP.NET Core的文章，就不一一例舉了。\n1. ASP.NET Core 之 Identity 入门（一）([連結](http://www.cnblogs.com/savorboard/p/aspnetcore-identity.html))\n1. ASP.NET Core 之 Identity 入门（二）([連結](http://www.cnblogs.com/savorboard/p/aspnetcore-identity2.html))\n1. ASP.NET Core 之 Identity 入门（三）([連結](http://www.cnblogs.com/savorboard/p/aspnetcore-identity3.html))\n1. ASP.NET Core 中的那些认证中间件及一些重要知识点([連結](http://www.cnblogs.com/savorboard/p/aspnetcore-authentication.html))\n\n## 小結\n目前看完這些資料後，尚未實作，先釐清Identity、Authentication與Authorization三者間的差異。\n之後實後再回來補充資料。\b","source":"_posts/dotNetCoreIdentityResearch.md","raw":"---\ntitle: ASP.NET Core Identity、Authentication資源搜集\ntags:\n  - .Net Core\n  - Identity\n  - Authentication\ncategories:\n  - .Net Core\ndate: 2017-06-07 15:47:05\n---\n\n\n# ASP.NET Core 的 Identity與Authentication 資源搜集\n\n最近團隊計畫要從 ASP.NET 4.5 轉移到 ASP.NET Core，預先研究身份驗證與授權的相關文章，把讀過的資源整理起來方便之後查找。\n\n## 官方文件 ([連結](https://docs.microsoft.com/en-us/aspnet/core/security))\n在官方文件的 Security 章節裡([連結](https://docs.microsoft.com/en-us/aspnet/core/security/authentication/))，有提到關於Authentication(驗證)與Authorization(授權)的作法，其中關於Authentication的作法大約分成下列幾種方式:\n1. OSS Authentication Providers (OSS驗證)\n1. 使用 AspNetCore Identity EntityFrameworkCore\n1. 啟動 Facebook, Google 或其他驗證機制\n1. 透過簡訊的兩步驟驗證\n1. 使用Cookie Middleware而不使用ASP.NET Core Identity ([連結](https://docs.microsoft.com/en-us/aspnet/core/security/authentication/cookie))\n1. 使用Azure Active Directory (Azure AD)\n1. 使用 IdentityServer4\n\n基於上述的「5」，大約需要在 `Startup.cs` 的 `Configure` 方法中 `app.UseMVC()` 前加入下述程式:\n```c#\nusing Microsoft.AspNetCore.Authentication.Cookies;\n\nnamespace WebApplicationBasic\n{\n    public class Startup\n    {\n      public void Configure(IApplicationBuilder app, IHostingEnvironment env, ILoggerFactory loggerFactory)\n      {\n\n        app.UseCookieAuthentication(new CookieAuthenticationOptions()\n            {\n              AuthenticationScheme = \"CoreMVCCookieMiddlewareInstance\",\n              // AuthenticationScheme - this is a value by which the middleware is known. This is useful when there are multiple instances of middleware and you want to limit authorization to one instance.\n\n              LoginPath = new PathString(\"/Account/Unauthorized/\"),\n              // 當使用者未驗證時會重新轉導的路徑\n\n              AccessDeniedPath = new PathString(\"/Account/Forbidden/\"),\n              // 當使用者沒有使用權限時的轉導路徑\n\n              AutomaticAuthenticate = true,\n              // 在每次的 Requet(請求)前運行，嚐試驗證與重畫任何序列化主體\n\n              AutomaticChallenge = true\n              // 當授權失效時，Middleware會重新轉導到LoginPath或AccessDeniedPath\n            });\n\n        app.UseMVC();\n      }\n    }\n}\n\n```\n\n使用者登入時，呼叫SignInAsync 並傳入設定好的 `ClaimsPrincipal` Object\n```c#\nawait HttpContext.Authentication.SignInAsync(\"MyCookieMiddlewareInstance\", principal);\n```\n使用者登出時，呼叫SignOutAsync\n```c#\nawait HttpContext.Authentication.SignOutAsync(\"MyCookieMiddlewareInstance\");\n```\n\n\n官方文件讀到這裡，我\b對 `ClaimsPrincipal` 與 `ClaimsIdentity` 產生疑問，所以順著找又找到下列的說明與文章。\n\n## ClaimsIdentity 與 ClaimsPrincipal\n簡單來說 ClaimsIdentity 指的是驗證的方法，例如: 帳號密碼、手機簡訊或Windows驗證等。\nClaimsPrincipal 則是指驗證的主體，也就是請求驗證的使用者。\n在 ClaimsPrincipal 中有一個屬性為`IEnumerable<ClaimsIdentity> Identities`，這表示一個使用者可以有多種的驗證方式(驗證的方法)，來向 Server 證明自己是當事人。\n\n## 非官方文件\n下面列出在閱讀官方文件後，找到的補充資料。\n\n### 英文\n1. 解釋 ClaimsPrincipal 與 ClaimsIdentity間的關聯 by Andrew Lock ([連結](https://andrewlock.net/introduction-to-authentication-with-asp-net-core/))\n1. Exploring the cookie authentication middleware in ASP.NET Core. by Andrew Lock ([連結](https://andrewlock.net/exploring-the-cookieauthenticationmiddleware-in-asp-net-core/))\n\n\n### 中文\n這裡列出四篇「杨晓东」的文章，用比較簡單的例子來說明Identity。\n作者的網站裡還有很多ASP.NET Core的文章，就不一一例舉了。\n1. ASP.NET Core 之 Identity 入门（一）([連結](http://www.cnblogs.com/savorboard/p/aspnetcore-identity.html))\n1. ASP.NET Core 之 Identity 入门（二）([連結](http://www.cnblogs.com/savorboard/p/aspnetcore-identity2.html))\n1. ASP.NET Core 之 Identity 入门（三）([連結](http://www.cnblogs.com/savorboard/p/aspnetcore-identity3.html))\n1. ASP.NET Core 中的那些认证中间件及一些重要知识点([連結](http://www.cnblogs.com/savorboard/p/aspnetcore-authentication.html))\n\n## 小結\n目前看完這些資料後，尚未實作，先釐清Identity、Authentication與Authorization三者間的差異。\n之後實後再回來補充資料。\b","slug":"dotNetCoreIdentityResearch","published":1,"updated":"2017-06-07T07:49:36.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj3mp828b00037xzciamxf958","content":"<h1 id=\"ASP-NET-Core-的-Identity與Authentication-資源搜集\"><a href=\"#ASP-NET-Core-的-Identity與Authentication-資源搜集\" class=\"headerlink\" title=\"ASP.NET Core 的 Identity與Authentication 資源搜集\"></a>ASP.NET Core 的 Identity與Authentication 資源搜集</h1><p>最近團隊計畫要從 ASP.NET 4.5 轉移到 ASP.NET Core，預先研究身份驗證與授權的相關文章，把讀過的資源整理起來方便之後查找。</p>\n<h2 id=\"官方文件-連結\"><a href=\"#官方文件-連結\" class=\"headerlink\" title=\"官方文件 (連結)\"></a>官方文件 (<a href=\"https://docs.microsoft.com/en-us/aspnet/core/security\" target=\"_blank\" rel=\"external\">連結</a>)</h2><p>在官方文件的 Security 章節裡(<a href=\"https://docs.microsoft.com/en-us/aspnet/core/security/authentication/\" target=\"_blank\" rel=\"external\">連結</a>)，有提到關於Authentication(驗證)與Authorization(授權)的作法，其中關於Authentication的作法大約分成下列幾種方式:</p>\n<ol>\n<li>OSS Authentication Providers (OSS驗證)</li>\n<li>使用 AspNetCore Identity EntityFrameworkCore</li>\n<li>啟動 Facebook, Google 或其他驗證機制</li>\n<li>透過簡訊的兩步驟驗證</li>\n<li>使用Cookie Middleware而不使用ASP.NET Core Identity (<a href=\"https://docs.microsoft.com/en-us/aspnet/core/security/authentication/cookie\" target=\"_blank\" rel=\"external\">連結</a>)</li>\n<li>使用Azure Active Directory (Azure AD)</li>\n<li>使用 IdentityServer4</li>\n</ol>\n<p>基於上述的「5」，大約需要在 <code>Startup.cs</code> 的 <code>Configure</code> 方法中 <code>app.UseMVC()</code> 前加入下述程式:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div></pre></td><td class=\"code\"><pre><div class=\"line\">using Microsoft.AspNetCore.Authentication.Cookies;</div><div class=\"line\"></div><div class=\"line\">namespace WebApplicationBasic</div><div class=\"line\">&#123;</div><div class=\"line\">    public class Startup</div><div class=\"line\">    &#123;</div><div class=\"line\">      public void Configure(IApplicationBuilder app, IHostingEnvironment env, ILoggerFactory loggerFactory)</div><div class=\"line\">      &#123;</div><div class=\"line\"></div><div class=\"line\">        app.UseCookieAuthentication(new CookieAuthenticationOptions()</div><div class=\"line\">            &#123;</div><div class=\"line\">              AuthenticationScheme = &quot;CoreMVCCookieMiddlewareInstance&quot;,</div><div class=\"line\">              // AuthenticationScheme - this is a value by which the middleware is known. This is useful when there are multiple instances of middleware and you want to limit authorization to one instance.</div><div class=\"line\"></div><div class=\"line\">              LoginPath = new PathString(&quot;/Account/Unauthorized/&quot;),</div><div class=\"line\">              // 當使用者未驗證時會重新轉導的路徑</div><div class=\"line\"></div><div class=\"line\">              AccessDeniedPath = new PathString(&quot;/Account/Forbidden/&quot;),</div><div class=\"line\">              // 當使用者沒有使用權限時的轉導路徑</div><div class=\"line\"></div><div class=\"line\">              AutomaticAuthenticate = true,</div><div class=\"line\">              // 在每次的 Requet(請求)前運行，嚐試驗證與重畫任何序列化主體</div><div class=\"line\"></div><div class=\"line\">              AutomaticChallenge = true</div><div class=\"line\">              // 當授權失效時，Middleware會重新轉導到LoginPath或AccessDeniedPath</div><div class=\"line\">            &#125;);</div><div class=\"line\"></div><div class=\"line\">        app.UseMVC();</div><div class=\"line\">      &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>使用者登入時，呼叫SignInAsync 並傳入設定好的 <code>ClaimsPrincipal</code> Object<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">await HttpContext.Authentication.SignInAsync(&quot;MyCookieMiddlewareInstance&quot;, principal);</div></pre></td></tr></table></figure></p>\n<p>使用者登出時，呼叫SignOutAsync<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">await HttpContext.Authentication.SignOutAsync(&quot;MyCookieMiddlewareInstance&quot;);</div></pre></td></tr></table></figure></p>\n<p>官方文件讀到這裡，我\b對 <code>ClaimsPrincipal</code> 與 <code>ClaimsIdentity</code> 產生疑問，所以順著找又找到下列的說明與文章。</p>\n<h2 id=\"ClaimsIdentity-與-ClaimsPrincipal\"><a href=\"#ClaimsIdentity-與-ClaimsPrincipal\" class=\"headerlink\" title=\"ClaimsIdentity 與 ClaimsPrincipal\"></a>ClaimsIdentity 與 ClaimsPrincipal</h2><p>簡單來說 ClaimsIdentity 指的是驗證的方法，例如: 帳號密碼、手機簡訊或Windows驗證等。<br>ClaimsPrincipal 則是指驗證的主體，也就是請求驗證的使用者。<br>在 ClaimsPrincipal 中有一個屬性為<code>IEnumerable&lt;ClaimsIdentity&gt; Identities</code>，這表示一個使用者可以有多種的驗證方式(驗證的方法)，來向 Server 證明自己是當事人。</p>\n<h2 id=\"非官方文件\"><a href=\"#非官方文件\" class=\"headerlink\" title=\"非官方文件\"></a>非官方文件</h2><p>下面列出在閱讀官方文件後，找到的補充資料。</p>\n<h3 id=\"英文\"><a href=\"#英文\" class=\"headerlink\" title=\"英文\"></a>英文</h3><ol>\n<li>解釋 ClaimsPrincipal 與 ClaimsIdentity間的關聯 by Andrew Lock (<a href=\"https://andrewlock.net/introduction-to-authentication-with-asp-net-core/\" target=\"_blank\" rel=\"external\">連結</a>)</li>\n<li>Exploring the cookie authentication middleware in ASP.NET Core. by Andrew Lock (<a href=\"https://andrewlock.net/exploring-the-cookieauthenticationmiddleware-in-asp-net-core/\" target=\"_blank\" rel=\"external\">連結</a>)</li>\n</ol>\n<h3 id=\"中文\"><a href=\"#中文\" class=\"headerlink\" title=\"中文\"></a>中文</h3><p>這裡列出四篇「杨晓东」的文章，用比較簡單的例子來說明Identity。<br>作者的網站裡還有很多ASP.NET Core的文章，就不一一例舉了。</p>\n<ol>\n<li>ASP.NET Core 之 Identity 入门（一）(<a href=\"http://www.cnblogs.com/savorboard/p/aspnetcore-identity.html\" target=\"_blank\" rel=\"external\">連結</a>)</li>\n<li>ASP.NET Core 之 Identity 入门（二）(<a href=\"http://www.cnblogs.com/savorboard/p/aspnetcore-identity2.html\" target=\"_blank\" rel=\"external\">連結</a>)</li>\n<li>ASP.NET Core 之 Identity 入门（三）(<a href=\"http://www.cnblogs.com/savorboard/p/aspnetcore-identity3.html\" target=\"_blank\" rel=\"external\">連結</a>)</li>\n<li>ASP.NET Core 中的那些认证中间件及一些重要知识点(<a href=\"http://www.cnblogs.com/savorboard/p/aspnetcore-authentication.html\" target=\"_blank\" rel=\"external\">連結</a>)</li>\n</ol>\n<h2 id=\"小結\"><a href=\"#小結\" class=\"headerlink\" title=\"小結\"></a>小結</h2><p>目前看完這些資料後，尚未實作，先釐清Identity、Authentication與Authorization三者間的差異。<br>之後實後再回來補充資料。\b</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"ASP-NET-Core-的-Identity與Authentication-資源搜集\"><a href=\"#ASP-NET-Core-的-Identity與Authentication-資源搜集\" class=\"headerlink\" title=\"ASP.NET Core 的 Identity與Authentication 資源搜集\"></a>ASP.NET Core 的 Identity與Authentication 資源搜集</h1><p>最近團隊計畫要從 ASP.NET 4.5 轉移到 ASP.NET Core，預先研究身份驗證與授權的相關文章，把讀過的資源整理起來方便之後查找。</p>\n<h2 id=\"官方文件-連結\"><a href=\"#官方文件-連結\" class=\"headerlink\" title=\"官方文件 (連結)\"></a>官方文件 (<a href=\"https://docs.microsoft.com/en-us/aspnet/core/security\">連結</a>)</h2><p>在官方文件的 Security 章節裡(<a href=\"https://docs.microsoft.com/en-us/aspnet/core/security/authentication/\">連結</a>)，有提到關於Authentication(驗證)與Authorization(授權)的作法，其中關於Authentication的作法大約分成下列幾種方式:</p>\n<ol>\n<li>OSS Authentication Providers (OSS驗證)</li>\n<li>使用 AspNetCore Identity EntityFrameworkCore</li>\n<li>啟動 Facebook, Google 或其他驗證機制</li>\n<li>透過簡訊的兩步驟驗證</li>\n<li>使用Cookie Middleware而不使用ASP.NET Core Identity (<a href=\"https://docs.microsoft.com/en-us/aspnet/core/security/authentication/cookie\">連結</a>)</li>\n<li>使用Azure Active Directory (Azure AD)</li>\n<li>使用 IdentityServer4</li>\n</ol>\n<p>基於上述的「5」，大約需要在 <code>Startup.cs</code> 的 <code>Configure</code> 方法中 <code>app.UseMVC()</code> 前加入下述程式:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div></pre></td><td class=\"code\"><pre><div class=\"line\">using Microsoft.AspNetCore.Authentication.Cookies;</div><div class=\"line\"></div><div class=\"line\">namespace WebApplicationBasic</div><div class=\"line\">&#123;</div><div class=\"line\">    public class Startup</div><div class=\"line\">    &#123;</div><div class=\"line\">      public void Configure(IApplicationBuilder app, IHostingEnvironment env, ILoggerFactory loggerFactory)</div><div class=\"line\">      &#123;</div><div class=\"line\"></div><div class=\"line\">        app.UseCookieAuthentication(new CookieAuthenticationOptions()</div><div class=\"line\">            &#123;</div><div class=\"line\">              AuthenticationScheme = &quot;CoreMVCCookieMiddlewareInstance&quot;,</div><div class=\"line\">              // AuthenticationScheme - this is a value by which the middleware is known. This is useful when there are multiple instances of middleware and you want to limit authorization to one instance.</div><div class=\"line\"></div><div class=\"line\">              LoginPath = new PathString(&quot;/Account/Unauthorized/&quot;),</div><div class=\"line\">              // 當使用者未驗證時會重新轉導的路徑</div><div class=\"line\"></div><div class=\"line\">              AccessDeniedPath = new PathString(&quot;/Account/Forbidden/&quot;),</div><div class=\"line\">              // 當使用者沒有使用權限時的轉導路徑</div><div class=\"line\"></div><div class=\"line\">              AutomaticAuthenticate = true,</div><div class=\"line\">              // 在每次的 Requet(請求)前運行，嚐試驗證與重畫任何序列化主體</div><div class=\"line\"></div><div class=\"line\">              AutomaticChallenge = true</div><div class=\"line\">              // 當授權失效時，Middleware會重新轉導到LoginPath或AccessDeniedPath</div><div class=\"line\">            &#125;);</div><div class=\"line\"></div><div class=\"line\">        app.UseMVC();</div><div class=\"line\">      &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>使用者登入時，呼叫SignInAsync 並傳入設定好的 <code>ClaimsPrincipal</code> Object<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">await HttpContext.Authentication.SignInAsync(&quot;MyCookieMiddlewareInstance&quot;, principal);</div></pre></td></tr></table></figure></p>\n<p>使用者登出時，呼叫SignOutAsync<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">await HttpContext.Authentication.SignOutAsync(&quot;MyCookieMiddlewareInstance&quot;);</div></pre></td></tr></table></figure></p>\n<p>官方文件讀到這裡，我\b對 <code>ClaimsPrincipal</code> 與 <code>ClaimsIdentity</code> 產生疑問，所以順著找又找到下列的說明與文章。</p>\n<h2 id=\"ClaimsIdentity-與-ClaimsPrincipal\"><a href=\"#ClaimsIdentity-與-ClaimsPrincipal\" class=\"headerlink\" title=\"ClaimsIdentity 與 ClaimsPrincipal\"></a>ClaimsIdentity 與 ClaimsPrincipal</h2><p>簡單來說 ClaimsIdentity 指的是驗證的方法，例如: 帳號密碼、手機簡訊或Windows驗證等。<br>ClaimsPrincipal 則是指驗證的主體，也就是請求驗證的使用者。<br>在 ClaimsPrincipal 中有一個屬性為<code>IEnumerable&lt;ClaimsIdentity&gt; Identities</code>，這表示一個使用者可以有多種的驗證方式(驗證的方法)，來向 Server 證明自己是當事人。</p>\n<h2 id=\"非官方文件\"><a href=\"#非官方文件\" class=\"headerlink\" title=\"非官方文件\"></a>非官方文件</h2><p>下面列出在閱讀官方文件後，找到的補充資料。</p>\n<h3 id=\"英文\"><a href=\"#英文\" class=\"headerlink\" title=\"英文\"></a>英文</h3><ol>\n<li>解釋 ClaimsPrincipal 與 ClaimsIdentity間的關聯 by Andrew Lock (<a href=\"https://andrewlock.net/introduction-to-authentication-with-asp-net-core/\">連結</a>)</li>\n<li>Exploring the cookie authentication middleware in ASP.NET Core. by Andrew Lock (<a href=\"https://andrewlock.net/exploring-the-cookieauthenticationmiddleware-in-asp-net-core/\">連結</a>)</li>\n</ol>\n<h3 id=\"中文\"><a href=\"#中文\" class=\"headerlink\" title=\"中文\"></a>中文</h3><p>這裡列出四篇「杨晓东」的文章，用比較簡單的例子來說明Identity。<br>作者的網站裡還有很多ASP.NET Core的文章，就不一一例舉了。</p>\n<ol>\n<li>ASP.NET Core 之 Identity 入门（一）(<a href=\"http://www.cnblogs.com/savorboard/p/aspnetcore-identity.html\">連結</a>)</li>\n<li>ASP.NET Core 之 Identity 入门（二）(<a href=\"http://www.cnblogs.com/savorboard/p/aspnetcore-identity2.html\">連結</a>)</li>\n<li>ASP.NET Core 之 Identity 入门（三）(<a href=\"http://www.cnblogs.com/savorboard/p/aspnetcore-identity3.html\">連結</a>)</li>\n<li>ASP.NET Core 中的那些认证中间件及一些重要知识点(<a href=\"http://www.cnblogs.com/savorboard/p/aspnetcore-authentication.html\">連結</a>)</li>\n</ol>\n<h2 id=\"小結\"><a href=\"#小結\" class=\"headerlink\" title=\"小結\"></a>小結</h2><p>目前看完這些資料後，尚未實作，先釐清Identity、Authentication與Authorization三者間的差異。<br>之後實後再回來補充資料。\b</p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cj3mp828b00037xzciamxf958","category_id":"cj3mp828l00047xzcfqa24vt3","_id":"cj3mp828p00077xzc380vem1k"}],"PostTag":[{"post_id":"cj3mp827u00007xzcbqvf9z53","tag_id":"cj3mp828500017xzceszprbbo","_id":"cj3mp828900027xzcjizqlxjt"},{"post_id":"cj3mp828b00037xzciamxf958","tag_id":"cj3mp828m00057xzcejkvt7as","_id":"cj3mp828r00097xzcu0fvmd02"},{"post_id":"cj3mp828b00037xzciamxf958","tag_id":"cj3mp828n00067xzc5oei050x","_id":"cj3mp828s000a7xzcnwzm4i2o"},{"post_id":"cj3mp828b00037xzciamxf958","tag_id":"cj3mp828p00087xzc7dc96s7c","_id":"cj3mp828t000b7xzcu1794l35"}],"Tag":[{"name":"hexo","_id":"cj3mp828500017xzceszprbbo"},{"name":".Net Core","_id":"cj3mp828m00057xzcejkvt7as"},{"name":"Identity","_id":"cj3mp828n00067xzc5oei050x"},{"name":"Authentication","_id":"cj3mp828p00087xzc7dc96s7c"}]}}